% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth.R
\name{pervertexdata.smoothnn}
\alias{pervertexdata.smoothnn}
\title{Perform iterative nearest-neighbor smoothing of per-vertex data.}
\usage{
pervertexdata.smoothnn(surface, data, num_iter, silent = TRUE)
}
\arguments{
\item{surface}{an \code{fs.surface} instance}

\item{data}{numerical vector, the per-vertex data for the surface. Values set to \code{NA} will be ignore, so you can apply a mask before this operation (e.g., by setting the values for all vertices of the medial mask to \code{NA}).}

\item{num_iter}{positive scalar integer, the number of times to perform the averaging.}

\item{silent}{whether to print status}
}
\description{
Smoothing of surface data by iterative mesh neighborhood averaging. Assigns to each vertex the average of the values in its 1-ring neighborhood (based on the mesh edges).
}
\note{
The iteration is currently done in R, which means the performance is not great.

This does NOT smooth the mesh, it smoothes per-vertex values assigned to mesh vertices.
}
\examples{
\dontrun{
sjd = fsaverage.path(T);
sj = "fsaverage3";
surface = subject.surface(sjd, sj, hemi = "lh");
th = subject.morph.native(sjd, sj, "thickness", hemi="lh", cortex_only=T);
th_smooth = pervertexdata.smoothnn(surface, th, 15L);
vis.data.on.subject(sjd, sj, morph_data_lh = th);
vis.data.on.subject(sjd, sj, morph_data_lh = th_smooth);
}

}
