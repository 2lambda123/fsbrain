% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth.R
\name{pervertexdata.smoothnn}
\alias{pervertexdata.smoothnn}
\title{Ignore, not part of fsbrain, only here temporarily.}
\usage{
pervertexdata.smoothnn(
  surface,
  data,
  is_template,
  fwhm = NULL,
  num_iter = NULL
)
}
\arguments{
\item{surface}{an \code{fs.surface} instance}

\item{data}{numerical vector, the per-vertex data for the surface}

\item{is_template}{logical, whether the surface belongs to a template subject}

\item{fwhm}{double the target fwhm value. If given, num_iter must be NULL and will be computed to match this fwhm value.}

\item{num_iter}{positive scalar integer, the number of times to perform the averaging. Only use this if you know what you are doing, prefer specifying the target fwhm instead. The fwhm parameter must be NULL if this is used instead.}
}
\description{
Approximate Gaussian smoothing of surface data by iterative mesh neighborhood averaging.
}
\note{
The iteration is currently done in R, which means the performance is not great.

This function has been adapted from FreeSurfer and it is subject to the FreeSurfer software license.

 @examples
 \dontrun{
 sjd = fsaverage.path(T);
 surface = subject.surface(sjd, "fsaverage3", hemi = "lh");
 th = subject.morph.native(sjd, "fsaverage3", "thickness", hemi="lh");
 th_smooth = pervertexdata.smoothnn(surface, th, fwhm = 10.0);
 vis.data.on.subject(sjd, "fsaverage3", morph_data_lh = th);
 vis.data.on.subject(sjd, "fsaverage3", morph_data_lh = th_smooth);
 }
}
