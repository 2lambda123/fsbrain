% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brainview_magick.R
\name{vislayout.subject.morph.native}
\alias{vislayout.subject.morph.native}
\title{Combine several brainview images into a new figure.}
\usage{
vislayout.subject.morph.native(subjects_dir, subject_id, measure,
  hemi = "both", surface = "white", colormap = squash::jet,
  view_angles = get.view.angle.names(angle_set = "t4"),
  rgloptions = list(), rglactions = list(), cortex_only = FALSE,
  output_img = "fsbrain_arranged.png", silent = FALSE,
  grid_like = TRUE)
}
\arguments{
\item{subjects_dir}{string. The FreeSurfer SUBJECTS_DIR, i.e., a directory containing the data for all your subjects, each in a subdir named after the subject identifier.}

\item{subject_id}{string. The subject identifier.}

\item{measure}{string. The morphometry data to use. E.g., 'area' or 'thickness.'}

\item{hemi}{string, one of 'lh', 'rh', or 'both'. The hemisphere name. Used to construct the names of the label data files to be loaded.}

\item{surface}{string. The display surface. E.g., "white", "pial", or "inflated". Defaults to "white".}

\item{colormap}{a colormap. See the squash package for some colormaps. Defaults to \code{\link[squash]{jet}}.}

\item{view_angles}{list of strings. See \code{\link[fsbrain]{get.view.angle.names}} for all valid strings.}

\item{rgloptions}{option list passed to \code{\link[rgl]{par3d}}. Example: \code{rgloptions = list("windowRect"=c(50,50,1000,1000))}.}

\item{rglactions}{named list. A list in which the names are from a set of pre-defined actions. The values can be used to specify parameters for the action.}

\item{cortex_only}{logical, whether to mask the medial wall, i.e., whether the morphometry data for all vertices which are *not* part of the cortex (as defined by the label file `label/?h.cortex.label`) should be replaced with NA values. In other words, setting this to TRUE will ignore the values of the medial wall between the two hemispheres. If set to true, the mentioned label file needs to exist for the subject. Defaults to FALSE.}

\item{output_img}{string, path to the output file. Defaults to "fsbrain_arranged.png"}

\item{silent}{logical, whether to suppress all messages}

\item{grid_like}{logical, whether to arrange the images in a grid-like fashion. If FALSE, they will all be merged horizontally. Passed to \code{\link[fsbrain]{arrange.brainview.images}}.}
}
\value{
list of coloredmeshes. The coloredmeshes used for the visualization.
}
\description{
Create a tight layout view from several angles. Creates separate `sd_<angle>` images, then crops and finally merges them into a single output image with image magick.
}
\examples{
\donttest{
   fsbrain::download_optional_data();
   subjects_dir = fsbrain::get_optional_data_filepath("subjects_dir");
   vislayout.subject.morph.native(subjects_dir, "subject1", "curv",
    cortex_only=TRUE, rglactions=list("clip_data"=c(0.05, 0.95)),
    view_angles=get.view.angle.names(angle_set="medial"),
    output_img=tempfile(fileext=".png"));
}


}
\seealso{
Other morphometry visualization functions: \code{\link{vis.data.on.fsaverage}},
  \code{\link{vis.data.on.subject}},
  \code{\link{vis.subject.morph.native}},
  \code{\link{vis.subject.morph.standard}}
}
\concept{morphometry visualization functions}
