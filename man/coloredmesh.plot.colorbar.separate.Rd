% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis_meshes.R
\name{coloredmesh.plot.colorbar.separate}
\alias{coloredmesh.plot.colorbar.separate}
\title{Draw colorbar for coloredmeshes in separate 2D plot.}
\usage{
coloredmesh.plot.colorbar.separate(
  coloredmeshes,
  horizontal = TRUE,
  num_steps = 100,
  zlim = NULL,
  symm = FALSE,
  show = TRUE,
  png_options = NULL
)
}
\arguments{
\item{coloredmeshes}{list of coloredmeshes. A coloredmesh is a named list as returned by the coloredmesh.from.* functions. It has the entries 'mesh' of type tmesh3d, a 'col', which is a color specification for such a mesh.}

\item{horizontal}{logical, whether the colorbar should be drawn in horizontal oritentation. Defaults to TRUE.}

\item{num_steps}{integer, the number of steps to use for the colorbar. Defaults to 100.}

\item{zlim}{numerical vector of length 2. The data range for the colorbar, as returned by [base::range]. Defaults to the full (finite) range of the data of the coloredmeshes.}

\item{symm}{logical, whether to extend the colormap mapping domain to be symmetric around zero, useful to ensure that the zero value gets a neutral color for divergent colormaps. Defaults to FALSE.}

\item{show}{logical, Whether to open the resulting plot in R. Defaults to TRUE.}

\item{png_options}{Options to pass to [grDevices::png]], see the docs of that function for details. Allow you to save the plot as a png bitmap image. Example: \code{png_options = list("filename"="outfile.png", "width"=800)}. Defaults to NULL, which will not save anything.}
}
\value{
named list with the following entries: "full_data": the combined data from all coloredmeshes (can be NULL if they have no data). "colormap": the colormap function from the coloredmeshes (can be NULL if they have none).
}
\description{
Draw a colorbar for the coloredmeshes to a separate 2D plot. Due to the suboptimal handling of colorbar drawing in the three-dimensional multi-panel views, it is often desirable to plot the colorbar in a separate window, export it from there and then manually add it to the final plot version in some image manipulation software like Inkscape. If you need more control over the colormap than offered by this function (e.g., setting the color value for NA values or making a symmetric colormap to ensure that the zero point for divergent colormaps is a neutral color), you should write custom code, and the return value from this function will come in handy to do that.
}
\examples{
\donttest{
   fsbrain::download_optional_data();
   subjects_dir = fsbrain::get_optional_data_filepath("subjects_dir");
   coloredmeshes = vis.subject.morph.native(subjects_dir, 'subject1',
    'thickness', 'lh', views=c('t4'));
   coloredmesh.plot.colorbar.separate(coloredmeshes);
}

}
